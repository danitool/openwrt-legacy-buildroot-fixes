diff --git a/toolchain/gcc/patches/4.3.3+cs/all_cgraph_node-gcc-9.patch b/toolchain/gcc/patches/4.3.3+cs/all_cgraph_node-gcc-9.patch
new file mode 100644
index 0000000000..e3eff66cb1
--- /dev/null
+++ b/toolchain/gcc/patches/4.3.3+cs/all_cgraph_node-gcc-9.patch
@@ -0,0 +1,44 @@
+The patch is a workaround to build this version of gcc with
+gcc-9.1.0: https://gcc.gnu.org/PR90677
+
+There gcc-9.1.0 pinned 'cgraph_node' to a wired-in type and
+disallows anything else (function names in this case) to share
+'cgraph_node' name.
+
+Without this patch build fails as:
+gcc-4.6.4/gcc/pretty-print.h:322:6: error: 'cgraph_node' is not defined as a type
+  322 |      ATTRIBUTE_GCC_PPDIAG(2,3);
+      |      ^~~~~~~~~~~~~
+--- a/gcc/c-tree.h
++++ b/gcc/c-tree.h
+@@ -633,7 +633,7 @@
+ /* In order for the format checking to accept the C frontend
+    diagnostic framework extensions, you must include this file before
+    toplev.h, not after.  */
+-#if GCC_VERSION >= 4001
++#if (GCC_VERSION >= 4001) && (GCC_VERSION < 9001) /* 9.1.0 is buggy: https://gcc.gnu.org/PR90677  */
+ #define ATTRIBUTE_GCC_CDIAG(m, n) __attribute__ ((__format__ (GCC_DIAG_STYLE, m ,n))) ATTRIBUTE_NONNULL(m)
+ #else
+ #define ATTRIBUTE_GCC_CDIAG(m, n) ATTRIBUTE_NONNULL(m)
+--- a/gcc/pretty-print.h
++++ b/gcc/pretty-print.h
+@@ -301,7 +301,7 @@
+ 
+ /* This header may be included before toplev.h, hence the duplicate
+    definitions to allow for GCC-specific formats.  */
+-#if GCC_VERSION >= 3005
++#if (GCC_VERSION >= 3005) && (GCC_VERSION < 9001) /* 9.1.0 is buggy: https://gcc.gnu.org/PR90677  */
+ #define ATTRIBUTE_GCC_PPDIAG(m, n) __attribute__ ((__format__ (__gcc_diag__, m ,n))) ATTRIBUTE_NONNULL(m)
+ #else
+ #define ATTRIBUTE_GCC_PPDIAG(m, n) ATTRIBUTE_NONNULL(m)
+--- a/gcc/toplev.h
++++ b/gcc/toplev.h
+@@ -48,7 +48,7 @@
+ /* None of these functions are suitable for ATTRIBUTE_PRINTF, because
+    each language front end can extend them with its own set of format
+    specifiers.  We must use custom format checks.  */
+-#if GCC_VERSION >= 4001
++#if (GCC_VERSION >= 4001) && (GCC_VERSION < 9001) /* 9.1.0 is buggy: https://gcc.gnu.org/PR90677  */
+ #define ATTRIBUTE_GCC_DIAG(m, n) __attribute__ ((__format__ (GCC_DIAG_STYLE, m, n))) ATTRIBUTE_NONNULL(m)
+ #else
+ #define ATTRIBUTE_GCC_DIAG(m, n) ATTRIBUTE_NONNULL(m)
diff --git a/toolchain/gcc/patches/4.3.3/all_cgraph_node-gcc-9.patch b/toolchain/gcc/patches/4.3.3/all_cgraph_node-gcc-9.patch
new file mode 100644
index 0000000000..e3eff66cb1
--- /dev/null
+++ b/toolchain/gcc/patches/4.3.3/all_cgraph_node-gcc-9.patch
@@ -0,0 +1,44 @@
+The patch is a workaround to build this version of gcc with
+gcc-9.1.0: https://gcc.gnu.org/PR90677
+
+There gcc-9.1.0 pinned 'cgraph_node' to a wired-in type and
+disallows anything else (function names in this case) to share
+'cgraph_node' name.
+
+Without this patch build fails as:
+gcc-4.6.4/gcc/pretty-print.h:322:6: error: 'cgraph_node' is not defined as a type
+  322 |      ATTRIBUTE_GCC_PPDIAG(2,3);
+      |      ^~~~~~~~~~~~~
+--- a/gcc/c-tree.h
++++ b/gcc/c-tree.h
+@@ -633,7 +633,7 @@
+ /* In order for the format checking to accept the C frontend
+    diagnostic framework extensions, you must include this file before
+    toplev.h, not after.  */
+-#if GCC_VERSION >= 4001
++#if (GCC_VERSION >= 4001) && (GCC_VERSION < 9001) /* 9.1.0 is buggy: https://gcc.gnu.org/PR90677  */
+ #define ATTRIBUTE_GCC_CDIAG(m, n) __attribute__ ((__format__ (GCC_DIAG_STYLE, m ,n))) ATTRIBUTE_NONNULL(m)
+ #else
+ #define ATTRIBUTE_GCC_CDIAG(m, n) ATTRIBUTE_NONNULL(m)
+--- a/gcc/pretty-print.h
++++ b/gcc/pretty-print.h
+@@ -301,7 +301,7 @@
+ 
+ /* This header may be included before toplev.h, hence the duplicate
+    definitions to allow for GCC-specific formats.  */
+-#if GCC_VERSION >= 3005
++#if (GCC_VERSION >= 3005) && (GCC_VERSION < 9001) /* 9.1.0 is buggy: https://gcc.gnu.org/PR90677  */
+ #define ATTRIBUTE_GCC_PPDIAG(m, n) __attribute__ ((__format__ (__gcc_diag__, m ,n))) ATTRIBUTE_NONNULL(m)
+ #else
+ #define ATTRIBUTE_GCC_PPDIAG(m, n) ATTRIBUTE_NONNULL(m)
+--- a/gcc/toplev.h
++++ b/gcc/toplev.h
+@@ -48,7 +48,7 @@
+ /* None of these functions are suitable for ATTRIBUTE_PRINTF, because
+    each language front end can extend them with its own set of format
+    specifiers.  We must use custom format checks.  */
+-#if GCC_VERSION >= 4001
++#if (GCC_VERSION >= 4001) && (GCC_VERSION < 9001) /* 9.1.0 is buggy: https://gcc.gnu.org/PR90677  */
+ #define ATTRIBUTE_GCC_DIAG(m, n) __attribute__ ((__format__ (GCC_DIAG_STYLE, m, n))) ATTRIBUTE_NONNULL(m)
+ #else
+ #define ATTRIBUTE_GCC_DIAG(m, n) ATTRIBUTE_NONNULL(m)
